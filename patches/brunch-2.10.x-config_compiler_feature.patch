diff --git a/lib/utils/plugins.js b/lib/utils/plugins.js
index f6e1a54..0c2bef5 100644
--- a/lib/utils/plugins.js
+++ b/lib/utils/plugins.js
@@ -73,14 +73,21 @@ const plugins = (config, craDeps) => {
     return true;
   });
 
+  const addPlugin = (plugins, Plugin, name) => {
+    if (Plugin && Plugin.prototype && Plugin.prototype.brunchPlugin) {
+      const plugin = new Plugin(config);
+      if (typeof plugin.brunchPluginName !== 'string') {
+        plugin.brunchPluginName = typeof name === 'string' ? name : Plugin.brunchPluginName;
+      }
+      plugins.push(adapter(plugin));
+    }
+    return plugins;
+  };
+
   const plugins = deps.reduce((plugins, name) => {
     try {
       const Plugin = require(sysPath.join(npmPath, name));
-      if (Plugin && Plugin.prototype && Plugin.prototype.brunchPlugin) {
-        const plugin = new Plugin(config);
-        plugin.brunchPluginName = name;
-        plugins.push(adapter(plugin));
-      }
+      addPlugin(plugins, Plugin, name);
     } catch (error) {
       if (error.code === 'MODULE_NOT_FOUND' && name in pkg.dependencies) {
         throw new BrunchError('RUN_NPM_INSTALL', {error});
@@ -88,7 +95,7 @@ const plugins = (config, craDeps) => {
       logger.warn(`Loading of ${name} failed due to`, error);
     }
     return plugins;
-  }, [])
+  }, Array.isArray(config.compilers) ? config.compilers.reduce(addPlugin, []) : [])
   .filter(plugin => {
     // Does the user's config say this plugin should definitely be used?
     if (on.includes(plugin.brunchPluginName)) return true;
