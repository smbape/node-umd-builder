diff -rupN "a/lexer.js" "b/lexer.js"
--- "a/lexer.js"	2016-10-06 22:18:28.223643500 +0200
+++ "b/lexer.js"	2016-10-06 23:33:11.344798300 +0200
@@ -551,6 +551,8 @@ Lexer.prototype = {
       switch (type) {
         case 'require':
         case 'import':
+        case 'include':
+        case 'includeonce':
         case 'charset':
         case 'namespace':
         case 'media':
diff -rupN "a/nodes/import.js" "b/nodes/import.js"
--- "a/nodes/import.js"	2016-10-06 22:18:35.991738900 +0200
+++ "b/nodes/import.js"	2016-10-06 23:32:56.841708700 +0200
@@ -18,10 +18,11 @@ var Node = require('./node');
  * @api public
  */
 
-var Import = module.exports = function Import(expr, once){
+var Import = module.exports = function Import(expr, once, include){
   Node.call(this);
   this.path = expr;
   this.once = once || false;
+  this.include = include || false;
 };
 
 /**
@@ -41,6 +42,7 @@ Import.prototype.clone = function(parent
   var clone = new Import();
   clone.path = this.path.nodeName ? this.path.clone(parent, clone) : this.path;
   clone.once = this.once;
+  clone.include = this.include;
   clone.mtime = this.mtime;
   clone.lineno = this.lineno;
   clone.column = this.column;
diff -rupN "a/parser.js" "b/parser.js"
--- "a/parser.js"	2016-10-06 22:18:28.899512000 +0200
+++ "b/parser.js"	2016-10-06 23:19:01.329766500 +0200
@@ -738,6 +738,8 @@ Parser.prototype = {
    *  | namespace
    *  | import
    *  | require
+   *  | include
+   *  | includeonce
    *  | media
    *  | atrule
    *  | scope
@@ -765,6 +767,8 @@ Parser.prototype = {
       case 'namespace':
       case 'import':
       case 'require':
+      case 'include':
+      case 'includeonce':
       case 'extend':
       case 'media':
       case 'atrule':
@@ -1262,7 +1266,7 @@ Parser.prototype = {
   import: function() {
     this.expect('import');
     this.allowPostfix = true;
-    return new nodes.Import(this.expression(), false);
+    return new nodes.Import(this.expression(), false, false);
   },
 
   /**
@@ -1272,7 +1276,27 @@ Parser.prototype = {
   require: function() {
     this.expect('require');
     this.allowPostfix = true;
-    return new nodes.Import(this.expression(), true);
+    return new nodes.Import(this.expression(), true, false);
+  },
+
+  /**
+   * include expression
+   */
+
+  include: function() {
+    this.expect('include');
+    this.allowPostfix = true;
+    return new nodes.Import(this.expression(), false, true);
+  },
+
+  /**
+   * includeonce expression
+   */
+
+  includeonce: function() {
+    this.expect('includeonce');
+    this.allowPostfix = true;
+    return new nodes.Import(this.expression(), true, true);
   },
 
   /**
diff -rupN "a/visitor/evaluator.js" "b/visitor/evaluator.js"
--- "a/visitor/evaluator.js"	2016-10-06 22:19:24.606171600 +0200
+++ "b/visitor/evaluator.js"	2016-10-06 23:33:25.843876400 +0200
@@ -36,7 +36,7 @@ function importFile(node, file, literal)
     if (this.requireHistory[file]) return nodes.null;
     this.requireHistory[file] = true;
 
-    if (literal && !this.includeCSS) {
+    if (literal && !this.includeCSS && !node.include) {
       return node;
     }
   }
@@ -869,7 +869,7 @@ Evaluator.prototype.visitImport = functi
   this.return++;
 
   var path = this.visit(imported.path).first
-    , nodeName = imported.once ? 'require' : 'import'
+    , nodeName = imported.include ? (imported.once ? 'include' : 'includeonce') : (imported.once ? 'require' : 'import')
     , found
     , literal;
 
@@ -878,6 +878,7 @@ Evaluator.prototype.visitImport = functi
 
   // url() passed
   if ('url' == path.name) {
+    if (imported.include) throw new Error('You cannot @include a url');
     if (imported.once) throw new Error('You cannot @require a url');
 
     return imported;
@@ -890,6 +891,7 @@ Evaluator.prototype.visitImport = functi
 
   // Absolute URL or hash
   if (/(?:url\s*\(\s*)?['"]?(?:#|(?:https?:)?\/\/)/i.test(path)) {
+    if (imported.include) throw new Error('You cannot @include a url');
     if (imported.once) throw new Error('You cannot @require a url');
     return imported;
   }
@@ -897,7 +899,7 @@ Evaluator.prototype.visitImport = functi
   // Literal
   if (/\.css(?:"|$)/.test(path)) {
     literal = true;
-    if (!imported.once && !this.includeCSS) {
+    if (!imported.once && !this.includeCSS && !imported.include) {
       return imported;
     }
   }
