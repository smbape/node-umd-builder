From 4de4eaf0db3ac4495f257d29758cccc4095f66ec Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?St=C3=A9phane=20MBAPE?= <rose.martin-8og3raxw@yopmail.com>
Date: Sat, 30 Apr 2016 12:17:20 +0200
Subject: [PATCH] add initialize feature

---
 lib/watch.js | 23 +++++++++++++++++++++++
 1 file changed, 23 insertions(+)

diff --git a/lib/watch.js b/lib/watch.js
index 5734f10..3331854 100644
--- a/lib/watch.js
+++ b/lib/watch.js
@@ -111,6 +111,27 @@ class BrunchWatcher {
         ]);
       })
       .then(() => {
+        return new Promise((resolve, reject) => {
+          const cfg = this.config;
+          if ('function' === typeof cfg.initialize) {
+            const initTimeout = setTimeout(function() {
+              logger.warn('initialize is taking a long time to start');
+              return logger.warn('**don\'t forget to invoke callback()**');
+            }, cfg.timeout || 5000);
+
+            const callback = () => {
+              var server;
+              clearTimeout(initTimeout);
+              resolve();
+            };
+
+            cfg.initialize(cfg, callback);
+          } else {
+            resolve();
+          }
+        });
+      })
+      .then(() => {
         const cfg = this.config;
         const plugins = this.plugins;
         if (cfg.hot) {
@@ -134,6 +155,10 @@ class BrunchWatcher {
     const cfg = this.config;
 
     this.watcher = this.initWatcher(this._watchedPaths);
+    if ('function' === typeof cfg.onwatch) {
+      cfg.onwatch(this.watcher);
+    }
+
     this.fileList
       .on('ready', () => {
         if (!this._startTime) return;
